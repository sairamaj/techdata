- 
    name: context.set
    command: Set-AzureRMContext -Subscription id
    description: Use Get-AzureRmSubscription to list
                 Set-AzureRmContext and then
                 Get-AzureRmContext
-
    name: doc.function.deployment
    command: https://github.com/projectkudu/kudu/wiki/Customizing-deployments
    description: .deployment commands documented here
-
    name: dashboard.style
    command: double click on empty area of dashboard
-
    name: kudu.logstream
    command: curl -v -u user:pwd https://<site>.scm.azurewebsites.net/api/logstream
-
    name: vm.automate
    url: https://buildazure.com/2018/04/17/using-chocolatey-with-azure-vms/
-
    name: fuctionapp.portal.readonly
    description: Source control is hooked up and hence cannot be edited in portal
-
    name: kudu.deployments
    command: curl -v -u user:pwd https://<site>.scm.azurewebsites.net/deployments   
-
    name: appservice.node.version
    command: set WEBSITE_NODE_DEFAULT_VERSION to version number `
             WEBSITE_NODE_DEFAULT_VERSION=8.9.3
-
    name: dashboard.add.subscriptions
    url: http://spartansoft.net/add-usage-azure-subscriptions-portal-dashboard/
-
    name: dashboard.add.vm
    description : All resources -> filter resource group -> from ... select pin to dashboard
-
    name: func.local.install
    url: https://github.com/Azure/azure-functions-core-tools
-
    name: func.csharp.run.commandline
    command: run from output directory with func host start
-
    name: deploy.travis
    url: https://docs.travis-ci.com/user/deployment/azure-web-apps/    
-
    name: azure.goto.ad
    url: aad.portal.azure.com
-
    name: keyvault.create.secret
    description: az keyvault secret set --name db --value "db value" --vault-name saitestkv1
-
    name: keyvault.list.secrets
    description: az keyvault secret list --vault-name saitestkv1
-
    name: keyvault.get.secret.ps
    description: (Get-AzureKeyVaultSecret -VaultName saitestkv1 -Name db).SecretValueText
-
    name: functions.cors.issue
    description: Clear all other CORS and use only '*'
    url: https://blogs.msdn.microsoft.com/benjaminperkins/2017/04/12/azure-functions-access-control-allow-credentials-with-cors/
-
    name: az.ad.sp
    command: az ad sp create-for-rbac; az role assignment list --assignee appidhre;az role assignment create --assignee appidhere --role Contributor;az role assignment list --assignee appidhre
    description: create and give Contributor
-
  name: managed.service.identity
  description: Your code needs credentials to authenticate to cloud services, `
               but you want to limit the visibility of those credentials as much as possible. `
               Ideally, they never appear on a developer’s workstation or get checked-in to source control.
               Azure Key Vault can store credentials securely so they aren’t in your code, but to retrieve them you need to authenticate to Azure Key Vault. To authenticate to Key Vault, you need a credential! A classic bootstrap problem. Through the magic of Azure and Azure AD, MSI provides a “bootstrap identity” that makes it much simpler to get things started.
  url: https://azure.microsoft.com/en-us/blog/keep-credentials-out-of-code-introducing-azure-ad-managed-service-identity/
-
  name: auto.login.to.azure
  description: Save-AzureRmContext and Import-AzureRmContext
  url: https://blogs.technet.microsoft.com/389thoughts/2018/02/11/logging-on-to-azure-for-your-everyday-job/
-
  name: appservice.deployment.target.project
  description: add .deployment file with config and project 

-
  name: stop.webjob
  description: To stop web job and also nice resource view
  url: https://github.com/projectkudu/kudu/wiki/Full-stopping-a-Web-App
