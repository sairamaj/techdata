- 
    name: tls.set
    command: '[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12'
    description: Sets TLS in powershell.
-
    name: ssl.ignore
    command: '[System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}' 
    description: Ignores the certificate warning and let you proceed.
-
    name: ssl.ignore.pwsh
    command: '-SkipCertificateCheck 
    description: Ignores the certificate warning and let you proceed.
- 
    name: tip.showcommand
    command : Show-Command CommandName
    description: 'Shows the parameters in nice GUI (ex: show-command Get-AzureRmResourceGroup )'
-
    name: doc.startup.commands
    command: https://www.howtogeek.com/126469/how-to-create-a-powershell-profile/
    description: Add startup commands whenever you launch default powershell
-
    name: script.startuppath
    command: $PSScriptRoot or $ScriptPath = split-path -parent $MyInvocation.MyCommand.Definition
    description: Use this to get current directory in powershell script.startuppath
-
    name: copy.files
    command: Start-BitsTransfer
    description: creates a Background Intelligent Transfer Service (BITS) transfer job to transfer one or more files between a client computer and a server
    url: https://docs.microsoft.com/en-us/powershell/module/bitstransfer/start-bitstransfer?view=win10-ps
-
    name: download.file
    command: '(New-Object System.Net.WebClient).DownloadFile("https://github.com/git-for-windows/git/releases/do
              wnload/v2.19.0.windows.1/Git-2.19.0-64-bit.exe", "gitsetup.exe")'
    description: To automate download of setups.
-
    name: load.configfile
    url: https://sarafian.github.io/2016/07/18/set-data-app-config-data-version-5.html
    description: Loads application configuration file in powershell
-
    name: load.app.config
    url: https://sarafian.github.io/2016/07/18/set-data-app-config-data-version-5.html
-
    name: convertions
    command: dec->hex "{0:x}" -f 100 hex->dec "{0:x}" -f 0x16 ; dec->bin [Convert]::ToString(129, 2) ; hex->bin [Convert]::ToString(0x81, 2)
    url: https://soykablog.wordpress.com/2012/08/22/three-ways-to-convert-decimal-to-hex-in-powershell/
-
    name: split.file
    command: split
    url: https://gist.github.com/jehugaleahsa/e23d90f65f378aff9aa254e774b40bc7 
-
    name: check.type
    command: $val -eq [string]
    url: https://techibee.com/uncategorized/c-typeof-equivalent-in-powershell/2690
-
    name: catch.specificexception
    command: catch [exceptionType]
-
    name: create.object.from.hashtable
    command: $setting = [pscustomobject]@{id=1; log="l"}
-
    name: list.parameters
    command: foreach($p in $PsBoundParameters.Keys){
                    if( $p -like '*Secret*'){
                        Write-Host $p (New-Object System.String('*', $PsBoundParameters[$p].Length))
                    }else{
                        Write-Host $p $PsBoundParameters[$p]
                    }
                    }
-
    name: write.object.to.string
    command: Write-Host ($Object | Format-List | Out-String)
-
    name: calculated.property
    command: $x | select-object -Property @{Name="foo"; Expression={$_.Name.SubString('startinstring')}}
-
    name: test.rm.connectivity
    command: Test-WSMan -ComputerName servernamehere
-
    name: module.source.path
    command: (Get-Module PSDesiredStateConfiguration -ListAvailable).ModuleBase
-
    name: run.external.wait.exitcode
    command: $p = Start-Process -FilePath "dotnet" -ArgumentList "run --project $Project $Arguments" -NoNewWindow -Wait -PassThru
    description: Exit code can be used with $p.ExitCode
-
    name: valuefrom.pipeline.process
    command: Wrap in process block
    url: https://stackoverflow.com/questions/14244910/script-only-seems-to-process-the-last-object-from-the-pipeline
-
    name: ps.cheatshet
    command: Useful cheatshet.
    url: https://gist.github.com/ab14jain/dd62f0c8884b82d3fa6031ad6684a629
-
    name: ps.credential.convert
    command: $p = [System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($Credentials.Password)
                  $Password = [system.runtime.interopservices.marshal]::PtrToStringAuto($p)
-
    name: installed.products
    command: Get-CimInstance -Class Win32_Product | Format-Table IdentifyingNumber, Name, LocalPackage -AutoSize
    url: https://stackoverflow.com/questions/29937568/how-can-i-find-the-product-guid-of-an-installed-msi-setup

